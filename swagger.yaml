openapi: 3.0.3
info:
  title: Swagger Product-Service - OpenAPI 3.0
  description: |-
    This is the product-service project documentation
    
    Some useful links:
    - [Product Service repository](https://github.com/ClaudiaHdz23/product-service)
  contact:
    email: claudia.hernandezgarcia01@gmail.com
  version: 1.0.0
servers:
  - url: https://2ws8krsku3.execute-api.us-east-1.amazonaws.com/dev/
tags:
  - name: Products
    description: Operations about Products
  - name: Import Products
    description: Operations to import Products
paths:
  /products:
    get:
      tags:
        - Products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 200
                  message:
                    type: object
                    $ref: '#/components/schemas/Product'
        '400':
          description: Incorrect data
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 400
                  message:
                    type: string
                    example: Product data is invalid
        '500':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 500
                  message:
                    type: string
                    example: An error was generated while saving product information     
  /products/{productId}:
    get:
      tags:
        - Products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 200
                  body:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Error getting product by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 404
                  message:
                    $ref: '#/components/schemas/ProductIdError'
        '500':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 500
                  message:
                    type: string
                    example: An error occurred while obtaining data
  /import:
    get:
      tags:
        - Import Products
      description: Get Signed URL
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: csv file name
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 200
                  body:
                    type: string
                    example: https://url.com
        '500':
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: 500
                  message:
                    type: string
                    example: An error occurred while generating the url.
      
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Product name
        price:
          type: integer
          format: int32
          example: 7.99
    ProductIdError:
      type: object
      properties:
        message:
          type: string
          format: int64
          example: Invalid productId